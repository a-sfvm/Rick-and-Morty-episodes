{"ast":null,"code":"export class ClientError extends Error {\n  response;\n  request;\n\n  constructor(response, request) {\n    const message = `${ClientError.extractMessage(response)}: ${JSON.stringify({\n      response,\n      request\n    })}`;\n    super(message);\n    Object.setPrototypeOf(this, ClientError.prototype);\n    this.response = response;\n    this.request = request; // this is needed as Safari doesn't support .captureStackTrace\n\n    if (typeof Error.captureStackTrace === `function`) {\n      Error.captureStackTrace(this, ClientError);\n    }\n  }\n\n  static extractMessage(response) {\n    return response.errors?.[0]?.message ?? `GraphQL Error (Code: ${String(response.status)})`;\n  }\n\n}","map":{"version":3,"mappings":"AAEA,OAAM,MAAOA,WAAP,SAA2BC,KAA3B,CAAgC;EAC7BC,QAAQ;EACRC,OAAO;;EAEdC,YAAYF,QAAZ,EAAuCC,OAAvC,EAAqE;IACnE,MAAME,OAAO,GAAG,GAAGL,WAAW,CAACM,cAAZ,CAA2BJ,QAA3B,CAAoC,KACrDK,IAAI,CAACC,SAAL,CAAe;MACbN,QADa;MAEbC;IAFa,CAAf,CAIF,EALA;IAOA,MAAME,OAAN;IAEAI,MAAM,CAACC,cAAP,CAAsB,IAAtB,EAA4BV,WAAW,CAACW,SAAxC;IAEA,KAAKT,QAAL,GAAgBA,QAAhB;IACA,KAAKC,OAAL,GAAeA,OAAf,CAbmE,CAenE;;IACA,IAAI,OAAOF,KAAK,CAACW,iBAAb,KAAmC,UAAvC,EAAmD;MACjDX,KAAK,CAACW,iBAAN,CAAwB,IAAxB,EAA8BZ,WAA9B;IACD;EACF;;EAE4B,OAAdM,cAAc,CAACJ,QAAD,EAA0B;IACrD,OAAOA,QAAQ,CAACW,MAAT,GAAkB,CAAlB,GAAsBR,OAAtB,IAAiC,wBAAwBS,MAAM,CAACZ,QAAQ,CAACa,MAAV,CAAiB,GAAvF;EACD;;AA3BmC","names":["ClientError","Error","response","request","constructor","message","extractMessage","JSON","stringify","Object","setPrototypeOf","prototype","captureStackTrace","errors","String","status"],"sources":["/Users/admin/code/language-finder/node_modules/graphql-request/src/legacy/classes/ClientError.ts"],"sourcesContent":["import type { GraphQLRequestContext, GraphQLResponse } from '../helpers/types.js'\n\nexport class ClientError extends Error {\n  public response: GraphQLResponse\n  public request: GraphQLRequestContext\n\n  constructor(response: GraphQLResponse, request: GraphQLRequestContext) {\n    const message = `${ClientError.extractMessage(response)}: ${\n      JSON.stringify({\n        response,\n        request,\n      })\n    }`\n\n    super(message)\n\n    Object.setPrototypeOf(this, ClientError.prototype)\n\n    this.response = response\n    this.request = request\n\n    // this is needed as Safari doesn't support .captureStackTrace\n    if (typeof Error.captureStackTrace === `function`) {\n      Error.captureStackTrace(this, ClientError)\n    }\n  }\n\n  private static extractMessage(response: GraphQLResponse): string {\n    return response.errors?.[0]?.message ?? `GraphQL Error (Code: ${String(response.status)})`\n  }\n}\n"]},"metadata":{},"sourceType":"module"}